apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.apollographql.android'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ru.cometrica.demoapp"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "AUTH_TOKEN", "\"da6a5c79f8c4aa93c11f013c9960c4897604c8f9\"")
            buildConfigField("String", "BASE_URL", "\"https://api.github.com/graphql\"")
        }

        debug {
            minifyEnabled false
            buildConfigField("String", "AUTH_TOKEN", "\"da6a5c79f8c4aa93c11f013c9960c4897604c8f9\"")
            buildConfigField("String", "BASE_URL", "\"https://api.github.com/graphql\"")
        }
    }
    sourceSets {
        main {
            // add kotlin to start of srcDirs for the normal work Studio templates
            main.java.srcDirs = ['src/main/kotlin'] + main.java.srcDirs
            test.java.srcDirs = ['src/test/kotlin'] + test.java.srcDirs
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // DI
    implementation "org.koin:koin-android:$koin_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "com.jakewharton.rxbinding3:rxbinding-core:$rxbindings_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Cloud
    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    androidTestImplementation "androidx.test.ext:junit:1.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.1"
    androidTestImplementation("com.schibsted.spain:barista:2.7.1") {
        exclude group: 'androidx.annotation'
        exclude group: 'androidx.legacy'
        exclude group: 'androidx.recyclerview'
        exclude group: 'androidx.test'
        exclude group: 'androidx.test.espresso'
        exclude group: 'androidx.test.ext'
        exclude group: 'androidx.vectordrawable'
        exclude group: 'com.android.support'
        exclude group: 'com.android.support.test.espresso'
        exclude group: 'com.android.support.test.uiautomator', module: 'uiautomator-v18'
    }

}

apollo {
    customTypeMapping = [
            "URI" : "java.net.URI",
            "Date": "java.util.Date",
            "DateTime": "java.util.Date"
    ]
}

jacoco {
    toolVersion = "0.8.3"
}
